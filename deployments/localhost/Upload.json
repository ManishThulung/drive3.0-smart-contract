{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "allow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "disallow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "display",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "shareAccess",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "access",
              "type": "bool"
            }
          ],
          "internalType": "struct Upload.Access[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf144641cc6626a2d28f2fe336efc4944c7880f11bc0e100342a6e9bd8eb637f4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1162767",
    "logsBloom": "0x
    "blockHash": "0xf6692f7cc2433d4aede41f5942c6d6c4092e873a7ff7f23745d9f9baee06c377",
    "transactionHash": "0xf144641cc6626a2d28f2fe336efc4944c7880f11bc0e100342a6e9bd8eb637f4",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1162767",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4ff63ef63c7d5c018f1b1546c8d3108f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"allow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"disallow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"display\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shareAccess\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"access\",\"type\":\"bool\"}],\"internalType\":\"struct Upload.Access[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Upload.sol\":\"Upload\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Upload.sol\":{\"content\":\"/**\\n * Pragma statements\\n * Import statements\\n * Events\\n * Errors\\n * Interfaces\\n * Libraries\\n * Contracts\\n *\\n * inside contracts pattern\\n * Type declarations\\n * State variables\\n * Events\\n * Errors\\n * Modifiers\\n * Functions\\n */\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ncontract Upload {\\n  struct Access {\\n    address user;\\n    bool access; //true or false\\n  }\\n  mapping(address => string[]) value;\\n  mapping(address => mapping(address => bool)) ownership;\\n  mapping(address => Access[]) accessList;\\n  mapping(address => mapping(address => bool)) previousData;\\n\\n  function add(address _user, string memory url) external {\\n    value[_user].push(url);\\n  }\\n\\n  function allow(address user) external {\\n    //def\\n    ownership[msg.sender][user] = true;\\n    if (previousData[msg.sender][user]) {\\n      for (uint i = 0; i < accessList[msg.sender].length; i++) {\\n        if (accessList[msg.sender][i].user == user) {\\n          accessList[msg.sender][i].access = true;\\n        }\\n      }\\n    } else {\\n      accessList[msg.sender].push(Access(user, true));\\n      previousData[msg.sender][user] = true;\\n    }\\n  }\\n\\n  function disallow(address user) public {\\n    ownership[msg.sender][user] = false;\\n    for (uint i = 0; i < accessList[msg.sender].length; i++) {\\n      if (accessList[msg.sender][i].user == user) {\\n        accessList[msg.sender][i].access = false;\\n      }\\n    }\\n  }\\n\\n  function display(address _user) external view returns (string[] memory) {\\n    require(_user == msg.sender || ownership[_user][msg.sender], \\\"You don't have access\\\");\\n    return value[_user];\\n  }\\n\\n  function shareAccess(address user) public view returns (Access[] memory) {\\n    return accessList[user];\\n  }\\n}\\n\",\"keccak256\":\"0xccf96ea5a479fbdfe05520ed7eb018e0e59c8e416fa3589643c616b9c26c1d52\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061141d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806336d6da551461005c578063a9ed9cb814610078578063d4f3753014610094578063eb39113f146100c4578063ff9913e8146100f4575b600080fd5b61007660048036038101906100719190610cc6565b610110565b005b610092600480360381019061008d9190610d22565b610185565b005b6100ae60048036038101906100a99190610d22565b6103a7565b6040516100bb9190610e57565b60405180910390f35b6100de60048036038101906100d99190610d22565b6104b2565b6040516100eb9190610fba565b60405180910390f35b61010e60048036038101906101099190610d22565b6106c8565b005b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150908161018091906111f2565b505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156103a3578173ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106102cf576102ce6112c4565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610390576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061036b5761036a6112c4565b5b9060005260206000200160000160146101000a81548160ff0219169083151502179055505b808061039b90611322565b91505061021d565b5050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104a7578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152505081526020019060010190610408565b505050509050919050565b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806105745750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa906113c7565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156106bd5783829060005260206000200180546106309061100b565b80601f016020809104026020016040519081016040528092919081815260200182805461065c9061100b565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505081526020019060010190610611565b505050509050919050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561097a5760005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610974578173ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108a05761089f6112c4565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610961576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061093c5761093b6112c4565b5b9060005260206000200160000160146101000a81548160ff0219169083151502179055505b808061096c90611322565b9150506107ee565b50610b0b565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4d82610b22565b9050919050565b610b5d81610b42565b8114610b6857600080fd5b50565b600081359050610b7a81610b54565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bd382610b8a565b810181811067ffffffffffffffff82111715610bf257610bf1610b9b565b5b80604052505050565b6000610c05610b0e565b9050610c118282610bca565b919050565b600067ffffffffffffffff821115610c3157610c30610b9b565b5b610c3a82610b8a565b9050602081019050919050565b82818337600083830152505050565b6000610c69610c6484610c16565b610bfb565b905082815260208101848484011115610c8557610c84610b85565b5b610c90848285610c47565b509392505050565b600082601f830112610cad57610cac610b80565b5b8135610cbd848260208601610c56565b91505092915050565b60008060408385031215610cdd57610cdc610b18565b5b6000610ceb85828601610b6b565b925050602083013567ffffffffffffffff811115610d0c57610d0b610b1d565b5b610d1885828601610c98565b9150509250929050565b600060208284031215610d3857610d37610b18565b5b6000610d4684828501610b6b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d8481610b42565b82525050565b60008115159050919050565b610d9f81610d8a565b82525050565b604082016000820151610dbb6000850182610d7b565b506020820151610dce6020850182610d96565b50505050565b6000610de08383610da5565b60408301905092915050565b6000602082019050919050565b6000610e0482610d4f565b610e0e8185610d5a565b9350610e1983610d6b565b8060005b83811015610e4a578151610e318882610dd4565b9750610e3c83610dec565b925050600181019050610e1d565b5085935050505092915050565b60006020820190508181036000830152610e718184610df9565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610edf578082015181840152602081019050610ec4565b60008484015250505050565b6000610ef682610ea5565b610f008185610eb0565b9350610f10818560208601610ec1565b610f1981610b8a565b840191505092915050565b6000610f308383610eeb565b905092915050565b6000602082019050919050565b6000610f5082610e79565b610f5a8185610e84565b935083602082028501610f6c85610e95565b8060005b85811015610fa85784840389528151610f898582610f24565b9450610f9483610f38565b925060208a01995050600181019050610f70565b50829750879550505050505092915050565b60006020820190508181036000830152610fd48184610f45565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102357607f821691505b60208210810361103657611035610fdc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261109e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611061565b6110a88683611061565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006110ef6110ea6110e5846110c0565b6110ca565b6110c0565b9050919050565b6000819050919050565b611109836110d4565b61111d611115826110f6565b84845461106e565b825550505050565b600090565b611132611125565b61113d818484611100565b505050565b5b818110156111615761115660008261112a565b600181019050611143565b5050565b601f8211156111a6576111778161103c565b61118084611051565b8101602085101561118f578190505b6111a361119b85611051565b830182611142565b50505b505050565b600082821c905092915050565b60006111c9600019846008026111ab565b1980831691505092915050565b60006111e283836111b8565b9150826002028217905092915050565b6111fb82610ea5565b67ffffffffffffffff81111561121457611213610b9b565b5b61121e825461100b565b611229828285611165565b600060209050601f83116001811461125c576000841561124a578287015190505b61125485826111d6565b8655506112bc565b601f19841661126a8661103c565b60005b828110156112925784890151825560018201915060208501945060208101905061126d565b868310156112af57848901516112ab601f8916826111b8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132d826110c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361135f5761135e6112f3565b5b600182019050919050565b600082825260208201905092915050565b7f596f7520646f6e27742068617665206163636573730000000000000000000000600082015250565b60006113b160158361136a565b91506113bc8261137b565b602082019050919050565b600060208201905081810360008301526113e0816113a4565b905091905056fea2646970667358221220da9a8c08011db2f456c7e2afb13398e87b0d4e41648861f32e3787f340b45b6464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806336d6da551461005c578063a9ed9cb814610078578063d4f3753014610094578063eb39113f146100c4578063ff9913e8146100f4575b600080fd5b61007660048036038101906100719190610cc6565b610110565b005b610092600480360381019061008d9190610d22565b610185565b005b6100ae60048036038101906100a99190610d22565b6103a7565b6040516100bb9190610e57565b60405180910390f35b6100de60048036038101906100d99190610d22565b6104b2565b6040516100eb9190610fba565b60405180910390f35b61010e60048036038101906101099190610d22565b6106c8565b005b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150908161018091906111f2565b505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156103a3578173ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106102cf576102ce6112c4565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610390576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061036b5761036a6112c4565b5b9060005260206000200160000160146101000a81548160ff0219169083151502179055505b808061039b90611322565b91505061021d565b5050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104a7578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152505081526020019060010190610408565b505050509050919050565b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806105745750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa906113c7565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156106bd5783829060005260206000200180546106309061100b565b80601f016020809104026020016040519081016040528092919081815260200182805461065c9061100b565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505081526020019060010190610611565b505050509050919050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561097a5760005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610974578173ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108a05761089f6112c4565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610961576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061093c5761093b6112c4565b5b9060005260206000200160000160146101000a81548160ff0219169083151502179055505b808061096c90611322565b9150506107ee565b50610b0b565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4d82610b22565b9050919050565b610b5d81610b42565b8114610b6857600080fd5b50565b600081359050610b7a81610b54565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bd382610b8a565b810181811067ffffffffffffffff82111715610bf257610bf1610b9b565b5b80604052505050565b6000610c05610b0e565b9050610c118282610bca565b919050565b600067ffffffffffffffff821115610c3157610c30610b9b565b5b610c3a82610b8a565b9050602081019050919050565b82818337600083830152505050565b6000610c69610c6484610c16565b610bfb565b905082815260208101848484011115610c8557610c84610b85565b5b610c90848285610c47565b509392505050565b600082601f830112610cad57610cac610b80565b5b8135610cbd848260208601610c56565b91505092915050565b60008060408385031215610cdd57610cdc610b18565b5b6000610ceb85828601610b6b565b925050602083013567ffffffffffffffff811115610d0c57610d0b610b1d565b5b610d1885828601610c98565b9150509250929050565b600060208284031215610d3857610d37610b18565b5b6000610d4684828501610b6b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d8481610b42565b82525050565b60008115159050919050565b610d9f81610d8a565b82525050565b604082016000820151610dbb6000850182610d7b565b506020820151610dce6020850182610d96565b50505050565b6000610de08383610da5565b60408301905092915050565b6000602082019050919050565b6000610e0482610d4f565b610e0e8185610d5a565b9350610e1983610d6b565b8060005b83811015610e4a578151610e318882610dd4565b9750610e3c83610dec565b925050600181019050610e1d565b5085935050505092915050565b60006020820190508181036000830152610e718184610df9565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610edf578082015181840152602081019050610ec4565b60008484015250505050565b6000610ef682610ea5565b610f008185610eb0565b9350610f10818560208601610ec1565b610f1981610b8a565b840191505092915050565b6000610f308383610eeb565b905092915050565b6000602082019050919050565b6000610f5082610e79565b610f5a8185610e84565b935083602082028501610f6c85610e95565b8060005b85811015610fa85784840389528151610f898582610f24565b9450610f9483610f38565b925060208a01995050600181019050610f70565b50829750879550505050505092915050565b60006020820190508181036000830152610fd48184610f45565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102357607f821691505b60208210810361103657611035610fdc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261109e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611061565b6110a88683611061565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006110ef6110ea6110e5846110c0565b6110ca565b6110c0565b9050919050565b6000819050919050565b611109836110d4565b61111d611115826110f6565b84845461106e565b825550505050565b600090565b611132611125565b61113d818484611100565b505050565b5b818110156111615761115660008261112a565b600181019050611143565b5050565b601f8211156111a6576111778161103c565b61118084611051565b8101602085101561118f578190505b6111a361119b85611051565b830182611142565b50505b505050565b600082821c905092915050565b60006111c9600019846008026111ab565b1980831691505092915050565b60006111e283836111b8565b9150826002028217905092915050565b6111fb82610ea5565b67ffffffffffffffff81111561121457611213610b9b565b5b61121e825461100b565b611229828285611165565b600060209050601f83116001811461125c576000841561124a578287015190505b61125485826111d6565b8655506112bc565b601f19841661126a8661103c565b60005b828110156112925784890151825560018201915060208501945060208101905061126d565b868310156112af57848901516112ab601f8916826111b8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132d826110c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361135f5761135e6112f3565b5b600182019050919050565b600082825260208201905092915050565b7f596f7520646f6e27742068617665206163636573730000000000000000000000600082015250565b60006113b160158361136a565b91506113bc8261137b565b602082019050919050565b600060208201905081810360008301526113e0816113a4565b905091905056fea2646970667358221220da9a8c08011db2f456c7e2afb13398e87b0d4e41648861f32e3787f340b45b6464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11,
        "contract": "contracts/Upload.sol:Upload",
        "label": "value",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 17,
        "contract": "contracts/Upload.sol:Upload",
        "label": "ownership",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 23,
        "contract": "contracts/Upload.sol:Upload",
        "label": "accessList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(Access)6_storage)dyn_storage)"
      },
      {
        "astId": 29,
        "contract": "contracts/Upload.sol:Upload",
        "label": "previousData",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Access)6_storage)dyn_storage": {
        "base": "t_struct(Access)6_storage",
        "encoding": "dynamic_array",
        "label": "struct Upload.Access[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(Access)6_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Upload.Access[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Access)6_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Access)6_storage": {
        "encoding": "inplace",
        "label": "struct Upload.Access",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Upload.sol:Upload",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/Upload.sol:Upload",
            "label": "access",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}